// <auto-generated />
using System;
using FileAPI.Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FileAPI.Domain.Migrations
{
    [DbContext(typeof(FileDomainContext))]
    [Migration("20210207130206_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("FileAPI.Domain.Models.FileInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Extention")
                        .HasColumnType("text");

                    b.Property<int>("FileCategory")
                        .HasColumnType("integer");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<double>("Size")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UploaderUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("FileInformation");
                });

            modelBuilder.Entity("FileAPI.Domain.Models.ProfilePictures", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FileInformaionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("FileInformationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FileInformationId");

                    b.ToTable("ProfilePictures");
                });

            modelBuilder.Entity("FileAPI.Domain.Models.ProfilePictures", b =>
                {
                    b.HasOne("FileAPI.Domain.Models.FileInformation", "FileInformation")
                        .WithMany()
                        .HasForeignKey("FileInformationId");

                    b.Navigation("FileInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
